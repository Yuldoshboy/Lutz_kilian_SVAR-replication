%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\Windows One drive\OneDrive\Desktop\113299-V1\3011.xlsx
%    Worksheet: Sheet1
%
% Auto-generated by MATLAB on 04-Dec-2022 13:32:42

%% Set up the Import Options and import the data
opts = spreadsheetImportOptions("NumVariables", 14);

% Specify sheet and range
opts.Sheet = "Sheet1";
opts.DataRange = "A2:N71";

% Specify column names and types
opts.VariableNames = ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6", "LogofOilProd", "LogofREA", "LogofOilPrice", "Growthchangeoilprod", "ExchangeRate1", "Inflation1", "EcGrowth1", "ExchangeRateLOG"];
opts.SelectedVariableNames = ["LogofOilProd", "LogofREA", "LogofOilPrice", "Growthchangeoilprod", "ExchangeRate1", "Inflation1", "EcGrowth1", "ExchangeRateLOG"];
opts.VariableTypes = ["char", "char", "char", "char", "char", "char", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify variable properties
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["Var1", "Var2", "Var3", "Var4", "Var5", "Var6"], "EmptyFieldRule", "auto");

% Import the data
Untitled = readtable("D:\Windows One drive\OneDrive\Desktop\113299-V1\3011.xlsx", opts, "UseExcel", false);


%% Clear temporary variables
clear opts

%%
k = 3; % number of variables
% What to change when changing the number of % variables?

p = 4; %%%% number of Lags
% What to change when changing the size of the parallax?

J = 20; %%%% Range of impulse response function
% What should be changed when the size of the impulse response function is changed?

n = 2000; % bootstrap iterations

%% Data Loading
 %%%% Variables: Oil Production, World Economic activity, Oil Price, Economic Growth, Inflation, Exchange Rate
 %%%% Sample Perion: Q1, 2005 to Q2, 2022

 time=(2005+3/12:1/4:2022+6/12)';  % Time line (quarterly)

 T=70;

OilProduction1=data(:,1);  %%%% Percentage change in Oil Production per day
EconActivity1=data(:,2);   %%%% Log of World Economic Activity (OECD IPI)
OilPrice1=data(:,3);   %%%% Log of WTI Oil Price
EconomicGrowth1=data(:,4);   %%%% Percentage change in Economic Growth of Uzbekistan
Inflation1=data(:,5);         %%%% Inflation in Uzbekistan
ExchangeRate1=data(:,6);     %%%%% Log of Exchange Rate of Uzbekistan

%% Deviation from mean

OilProduction = OilProduction1.Growthchangeoilprod - mad(OilProduction1.Growthchangeoilprod);
EconActivity = EconActivity1.LogofREA - mad(EconActivity1.LogofREA); 
OilPrice = OilPrice1.LogofOilPrice - mad(OilPrice1.LogofOilPrice);
EconomicGrowth = EconomicGrowth1.EcGrowth1-mad(EconomicGrowth1.EcGrowth1);
Inflation = Inflation1.Inflation1-mad(Inflation1.Inflation1);
ExchangeRate = ExchangeRate1.ExchangeRateLOG-mad(ExchangeRate1.ExchangeRateLOG);

%% Ordering
%%% OilPrice is the most exogenous and OilProduction is the most endogenous

y=[OilProduction EconActivity OilPrice EconomicGrowth Inflation ExchangeRate];  % T by k

%% Dependent variable and explanatory variable (T-p) by k, here (T-4) by 3

y0=y(p+1:T,:);

y1=y(p:T-1,:);  %%% Explanatory variable at time t-1
y2=y(p-1:T-2,:);  %%%%% Explanatory variable at time t-2
y3=y(p-2:T-3,:);   %%%% Explanatory variable at time t-3
y4=y(p-3:T-4,:);   %%%% Explanatory variable at time t-4
y5=y(p-4:T-5,:);   %%%% Explanatory variable at time t-5
y6=y(p-5:T-6,:);   %%%% Explanatory variable at time t-6


y_L=[y1 y2 y3 y4 y5 y6]; %%%% Explanatory variable (x)

%%%inv(X'X)X'Y, p*k by k, here 12 by 3 For example Phi1hat is phihat(1:3,:)'

phihat = (y_L'*y_L)\(y_L'*y0);

% Making S matrix
S = [phihat';eye((p-1)*k), zeros((p-1)*k,k)]; % p*k by p*k

T = 64; % dependent variable was changed so Sample size did also.

% Making Omega matrix
uhat = y0 - y_L*phihat; % T-p by k
Omegahat = uhat'*uhat/(T-p*k); % k by k

%% Estimation of inv(B) Using Cholesky Decomposition
invB = chol(Omegahat); % Lower triangular matrix

%% Impulse Response

% Only S needs to be For-end looped, invB only multiplies
SS = eye(p*k); % short-run S matrix

% Impulse response storage space
% For example, theta_OilProduction(j,2) = OilProduction response after period j to EconActivity shock(e_2t)

theta_OilProduction = zeros(J+1,k); % Impulse response of OilProduction to each shock
theta_EconAcivity = zeros(J+1,k); % Impulse response of EconActivity to each shock 
theta_OilPrice = zeros(J+1,k); % Impulse response of OilPrice to each shock 
theta_EconGrowth = zeros(J+1,k); % Impulse respone of EconGrowth to each shock
theta_Inflation = zeros(J+1,k); % Impulse response of Inflation to each shock
theta_ExchangeRate = zeros(J+1,k) % Impulse response of Exchange rate to each shock

for j = 1:J+1 % j = 1 is actually when J = 0.
    
    psi_j = SS(1:k, 1:k); % First black of S^j Matrix, k by k
    theta  = psi_j*invB; % Impulse Response Coef, k by k 
    
    theta_OilProduction(j,:) = theta(1,:); % 1 by k OilProduction shock
    theta_EconAcivity(j,:) = theta(2,:); % 1 by k EconActivity shock 
    theta_OilPrice(j,:) = theta(3,:); % 1 by k OilPrice shock
    theta_EconGrowth(j,:) = theta(4,:); % 1 by k EconGrowth shock
    theta_Inflation(j,:) = theta(5,:); % 1 by k Inflation Shock
    theta_ExchangeRate(j,:) = theta(6,:);  % 1 by k Exchange rate shock

   
    
    SS = SS*S;
    
end

%% Confidence band of Impulse responses
% boot-straping, non-parametric method


implm11 = zeros(J+1,n); % To contain impulse response of y1 to e1t
implm12 = zeros(J+1,n); % To contain impulse response of y1 to e2t
implm13 = zeros(J+1,n); % To contain impulse response of y1 to e3t
implm21 = zeros(J+1,n); % To contain impulse response of y2 to e1t
implm22 = zeros(J+1,n); % To contain impulse response of y2 to e2t
implm23 = zeros(J+1,n); % To contain impulse response of y2 to e3t
implm31 = zeros(J+1,n); % To contain impulse response of y3 to e1t
implm32 = zeros(J+1,n); % To contain impulse response of y3 to e2t
implm33 = zeros(J+1,n); % To contain impulse response of y3 to e3t
implm41 = zeros(J+1,n); % To contain impulse response of y4 to e1t
implm42 = zeros(J+1,n); % To contain impulse response of y4 to e2t
implm43 = zeros(J+1,n); % To contain impulse response of y4 to e3t
implm51 = zeros(J+1,n); % To contain impulse response of y5 to e1t
implm52 = zeros(J+1,n); % To contain impulse response of y5 to e2t
implm53 = zeros(J+1,n); % To contain impulse response of y5 to e3t
implm61 = zeros(J+1,n); % To contain impulse response of y6 to e1t
implm62 = zeros(J+1,n); % To contain impulse response of y6 to e2t
implm63 = zeros(J+1,n); % To contain impulse response of y6 to e3t

%Start Bootstrapping

for indb = 1:n 

    % Randomize the order of residual terms
    indu = 1:(T-p);
    indu = indu';
    indu = randsample(indu,k);
    
    new_y = zeros(T,k); % Room to store new material

    for t = 1:T-(p+1)

        n_x1 = new_y(t+6,:); % Y(t-1), 1 by k
        n_x2 = new_y(t+5,:); % Y(t-2), 1 by k
        n_x3 = new_y(t+4,:); % Y(t-3), 1 by k
        n_x4 = new_y(t+3,:); % Y(t-4), 1 by k
        n_x5 = new_y(t+2,:); % Y(t-5), 1 by k
        n_x6 = new_y(t+1,:); % Y(t-6), 1 by k

        x = [n_x1 n_x2 n_x3 n_x4 n_x5 n_x6]; % 1 by p*k
        
        new_y(t+(p+1),:) = x*phihat + uhat(indu(t),:); % 1 by k

    end
    
    % new dependent variable
    y_b = new_y(p+1:T,:); % Y(t) , (T - p) by 2

    % new independent variable
    x1_b = new_y(6:T-1,:); % Y(t-1), (T - p) by k
    x2_b = new_y(5:T-2,:); % Y(t-2), (T - p) by k
    x3_b = new_y(4:T-3,:); % Y(t-3), (T - p) by k
    x4_b = new_y(3:T-4,:); % Y(t-4), (T - p) by k
    x5_b = new_y(2:T-5,:); % Y(t-5), (T - p) by k
    x6_b = new_y(1:T-6,:); % Y(t-6), (T - p) by k

    x_b = [x1_b x2_b x3_b x4_b x5_b x6_b]; % (T - p) by p*k
    
    x_b2 = x_b'*x_b;
    phi_b = (x_b2)\(x_b'*y_b); % p*k by k
    u_hat_b = y_b - x_b*phi_b; % T-p by k
    Omega_b = u_hat_b'*u_hat_b/(T-p*k); % k by k

    % Estimation of inv(B) using Cholesky decomposition
    % calculating the Inverse matrix of B by Cholesky Decomposition
    inv_B_b = chol(Omega_b)' ; %Lower triangular matrix
    S_b = [ phi_b';eye((p-1)*k), zeros((p-1)*k,k)]; % S matrix , p*k by p*k
    SS = eye(p*k);

    % Calculate the impulse response
    for j = 1:(J+1)

        psi_j = SS(1:k,1:k); % k by k
        theta = psi_j*inv_B_b; % k by k
        
        implm11(j,indb) = theta(1,1);
        implm12(j,indb) = theta(1,2);
        implm13(j,indb) = theta(1,3);
        implm21(j,indb) = theta(2,1);
        implm22(j,indb) = theta(2,2);
        implm23(j,indb) = theta(2,3);
        implm31(j,indb) = theta(3,1);
        implm32(j,indb) = theta(3,2);
        implm33(j,indb) = theta(3,3);
        implm41(j,indb) = theta(4,1);
        implm42(j,indb) = theta(4,2);
        implm43(j,indb) = theta(4,3);
        implm51(j,indb) = theta(5,1);
        implm52(j,indb) = theta(5,2);
        implm53(j,indb) = theta(5,3);
        implm61(j,indb) = theta(6,1);
        implm62(j,indb) = theta(6,2);
        implm63(j,indb) = theta(6,3);

        SS = SS*S_b;

    end
    
end 
% Bootstrapping finished

